import { container, inject, injectable } from "tsyringe";
<% const repositoryImports = []; %>
<% const dtoImports = []; %>
<% if (!repositoryExists) { %>
<%   repositoryImports.push(`import { ${pascalCaseName}Repository } from "../repositories/${snakeCaseName}_repository"`); %>
<% } %>
<% if (dtoExists) { %>
<%   dtoImports.push(`import { ${pascalCaseName}Dto } from "../dto/${snakeCaseName}_dto"`); %>
<% } else { %>
<%   dtoImports.push(`import { ${pascalCaseName}Dto } from "../dto/create_${snakeCaseName}_dto"`); %>
<% } %>
<%= repositoryImports.join('\n') %>
<%= dtoImports.join('\n') %>

@injectable()
export class <%= pascalCaseName %>Action {
  constructor(
<% if (repositoryExists) { %>
    @inject(<%= pascalCaseName %>Repository)
    private <%= camelCaseName %>Repository: <%= pascalCaseName %>Repository,
<% } %>
  ) {}

  handle = async (payload: <%= pascalCaseName %>Dto) => {
    // Implement action logic here
  };
}
